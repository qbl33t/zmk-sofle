#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2    &kp N3    &kp N4  &kp N5       &mmv MOVE_UP     &kp N6     &kp N7         &kp N8     &kp N9    &kp N0             &kp DELETE
&kp TAB     &kp Q      &kp W     &kp E     &kp R   &kp T        &mmv MOVE_DOWN   &kp Y      &kp U          &kp I      &kp O     &kp P              &kp BSLH
&kp CAPS    &kp A      &kp S     &kp D     &kp F   &kp G        &mmv MOVE_LEFT   &kp H      &kp J          &kp K      &kp L     &kp SEMI           &kp APOS
&kp LSHFT   &kp Z      &kp X     &kp C     &kp V   &kp B        &mmv MOVE_RIGHT  &kp N      &kp M          &kp COMMA  &kp DOT   &kp FSLH           &kp RSHIFT
&kp C_MUTE  &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE    &mkp LCLK        &kp ENTER  &kp BACKSPACE  &mo 2      &kp RALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE     &trans     &trans          &trans        &trans                &trans                   &mmv MOVE_UP     &trans            &trans             &trans     &kp MINUS  &kp EQUAL  &trans
&trans        &trans     &trans          &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &mmv MOVE_DOWN   &trans            &trans             &kp MINUS  &kp EQUAL  &trans     &trans
&kp CAPSLOCK  &trans     &mkp LCLK       &mkp RCLK     &kp LEFT_BRACE        &kp RIGHT_BRACE          &mmv MOVE_LEFT   &kp LEFT          &kp DOWN           &kp UP     &kp RIGHT  &kp SLASH  &trans
&kp LSHIFT    &trans     &msc SCRL_DOWN  &msc SCRL_UP  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &mmv MOVE_RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI   &kp APOS   &trans     &trans
&kp C_MUTE    &kp LCTRL  &kp LALT        &kp LGUI      &kp LGUI              &kp SPACE                &mkp LCLK        &kp ENTER         &kp DELETE         &trans     &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&none         &kp F1     &kp F2    &kp F3    &kp F4  &kp F5       &mmv MOVE_UP     &kp F6        &kp F7          &kp F8        &kp F9           &kp F10  &kp F11
&none         &none      &none     &trans    &trans  &trans       &mmv MOVE_DOWN   &trans        &trans          &none         &none            &none    &kp F12
&kp CAPSLOCK  &none      &none     &trans    &trans  &trans       &mmv MOVE_LEFT   &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT        &none    &none
&kp LSHFT     &none      &none     &none     &trans  &trans       &mmv MOVE_RIGHT  &kp C_VOL_DN  &kp C_NEXT      &kp K_MUTE    &kp C_VOLUME_UP  &none    &trans
&trans        &kp LCTRL  &kp LALT  &kp LGUI  &mo 3   &kp SPACE    &mkp LCLK        &kp ENTER     &kp BACKSPACE   &trans        &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans           &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans           &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
